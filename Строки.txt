/* Способ установки размера новой строки состоит в том, чтобы присвоить
переменной п меньшую величину из переданного значения и длины строки: */
int len = strlen(str);
n = (n < len) ? n : len; // меньшее из n и len
char *p = new char[n+l];
/* Это гарантирует, что new не выделит больше пространства, чем необходимо для
хранения строки.
Если время, затраченное на вызов функции strlen() неприемлемо, можно позволить 
непосредственно выбрать меньшее из значений n и длины строки. Приведенный ниже 
цикл завершается, когда m достигает значения п или длины строки, что бы ни 
случилось первым: */
int m = 0;
while ( m <= n && str[m] != '\0')
	m++;
char *p = new char[m+l];
/* В остальном коде будет использоваться m вместо n
Выражение */ str[m] != '\0' /* вычисляется как true, когда str[m] не
является нулевым символом, и как false — в противном случае. Поскольку в 
выражении && ненулевые значения преобразуются в true, а нулевые —
в false, проверочное условие while может быть также записано следующим образом: */
while (m <= n && str[m])